<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="true">
	<description>Apache Shiro configs</description>
	
	<bean id="chainDefinitionSectionMetaSource" 
		class="h.demo.shiro.extend.ChainDefinitionSectionMetaSource">
		<property name="permissionService" ref="permissionService" />
		<property name="roleService" ref="roleService" />
		<property name="filterChainDefinitions">
			<value>
				/login.do* = anon
				/signin.do = anon
				/unauthorized.do = anon
	            /static/* = anon
			</value>
		</property>
	</bean>
	<!-- /** = authc -->

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.do" />
		<property name="successUrl" value="/index.do" />
		<property name="unauthorizedUrl" value="/unauthorized.do" />
		<!-- shiro连接约束配置,在这里使用自定义的动态获取资源类 -->
    	<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property instead. -->
		<property name="realm" ref="baseDBRealm" />
		<!-- 应用级别的缓存配置 -->
		<property name="cacheManager" ref="shiroEhcacheManager"/> 
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Define the Shiro Realm implementation you want to use to connect to your back-end -->
	<bean id="baseDBRealm" class="h.demo.shiro.extend.BaseDBRealm">
		<property name="accountService" ref="accountService" />
		<!-- MD5加密 
	    <property name="credentialsMatcher">
	        <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
	            <property name="hashAlgorithmName" value="MD5" />
	        </bean>
	    </property>-->
	    <!-- 用户级别的缓存 -->
    	<property name="authorizationCacheName" value="h.demo.shiro.user" />
	</bean>

	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		 <property name="cacheManager" ref="ehcacheManager" />
	</bean>

</beans>